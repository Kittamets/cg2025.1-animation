import java.awt.*;
import java.awt.image.BufferedImage;
import java.util.LinkedList;
import java.util.Queue;
import javax.swing.JFrame;
import javax.swing.JPanel;

/*
* 05506014 Computer Graphics
* Assignment 1 : WHHAT IF I REBORNED
* 
* Made by : 66050010 Kittamet
            66050145 Nattawut
* Computer Science, KMITL
*/

public class Assignment1 extends JPanel implements Runnable {
    public static void main(String[] args) {
        Assignment1 m = new Assignment1();
        JFrame f = new JFrame();

        // Viewport
        f.add(m); // add panel to frame
        f.setTitle("ASSIGNMENT 1 : WHAT IF I REBORNED"); // title
        f.setSize(600, 600); // set size
        f.setResizable(true); // make it unresizable
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // make it close when exit
        f.setVisible(true); // make it visible

        // Animation
        (new Thread(m)).start();
    }

    @Override
    public void run() {
        double lastTime = System.currentTimeMillis();
        double currentTime, elapsedTime;

        while (true) {
            // Control time
            currentTime = System.currentTimeMillis();
            elapsedTime = currentTime - lastTime;
            lastTime = currentTime;

            // Update logic

            // Display
            repaint();

            // Control frame rate (adjust sleep time as needed)
            try {
                Thread.sleep(16); // ~60 FPS
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        // Call your drawing methods here
        pic1(g2d);
    }

    private void pic1(Graphics2D g2d) {
        bezierCurve(g2d, 339.190000, 196.140000, 337.990000, 196.220000, 338.180000, 200.370000, 335.670000, 209.000000,
                3);
        bezierCurve(g2d, 335.670000, 209.000000, 333.600000, 216.100000, 332.490000, 216.660000, 332.430000, 220.330000,
                3);
        bezierCurve(g2d, 332.430000, 220.330000, 332.360000, 225.150000, 334.210000, 228.790000, 335.810000, 231.950000,
                3);
        bezierCurve(g2d, 335.810000, 231.950000, 337.320000, 234.920000, 340.610000, 241.400000, 343.380000, 240.900000,
                3);
        bezierCurve(g2d, 343.380000, 240.900000, 345.790000, 240.470000, 346.860000, 234.930000, 347.860000, 229.760000,
                3);
        bezierCurve(g2d, 347.860000, 229.760000, 348.350000, 227.220000, 348.690000, 225.460000, 348.620000, 223.090000,
                3);
        bezierCurve(g2d, 348.620000, 223.090000, 348.480000, 218.270000, 346.790000, 215.800000, 344.430000, 210.040000,
                3);
        bezierCurve(g2d, 344.430000, 210.040000, 340.630000, 200.760000, 340.470000, 196.050000, 339.190000, 196.140000,
                3);
        bezierCurve(g2d, 337.950000, 237.950000, 336.970000, 239.260000, 334.440000, 238.840000, 329.570000, 237.950000,
                3);
        bezierCurve(g2d, 329.570000, 237.950000, 326.380000, 237.370000, 322.340000, 236.610000, 317.000000, 234.430000,
                3);
        bezierCurve(g2d, 317.000000, 234.430000, 311.530000, 232.190000, 307.820000, 229.740000, 305.000000, 227.860000,
                3);
        bezierCurve(g2d, 305.000000, 227.860000, 301.420000, 225.470000, 296.080000, 221.490000, 296.520000, 220.720000,
                3);
        bezierCurve(g2d, 296.520000, 220.720000, 296.890000, 220.080000, 300.800000, 222.470000, 307.090000, 223.580000,
                3);
        bezierCurve(g2d, 307.090000, 223.580000, 311.270000, 224.320000, 314.830000, 224.190000, 317.230000, 223.960000,
                3);
        bezierCurve(g2d, 317.230000, 223.960000, 319.070000, 223.850000, 321.810000, 223.870000, 324.990000, 224.630000,
                3);
        bezierCurve(g2d, 324.990000, 224.630000, 327.600000, 225.250000, 331.450000, 226.160000, 334.520000, 229.340000,
                3);
        bezierCurve(g2d, 334.520000, 229.340000, 336.860000, 231.760000, 339.330000, 236.100000, 337.940000, 237.960000,
                3);
        bezierCurve(g2d, 348.630000, 225.860000, 350.280000, 225.480000, 352.700000, 224.740000, 355.290000, 223.190000,
                3);
        bezierCurve(g2d, 355.290000, 223.190000, 358.330000, 221.370000, 360.340000, 219.210000, 362.430000, 216.900000,
                3);
        bezierCurve(g2d, 362.430000, 216.900000, 366.740000, 212.170000, 367.220000, 210.100000, 368.240000, 210.330000,
                3);
        bezierCurve(g2d, 368.240000, 210.330000, 370.200000, 210.760000, 371.330000, 219.060000, 368.240000, 225.850000,
                3);
        bezierCurve(g2d, 368.240000, 225.850000, 368.060000, 226.250000, 367.240000, 227.410000, 366.280000, 228.710000,
                3);
        bezierCurve(g2d, 366.280000, 228.710000, 364.940000, 230.500000, 363.310000, 232.540000, 362.630000, 233.180000,
                3);
        bezierCurve(g2d, 362.630000, 233.180000, 360.960000, 234.750000, 357.800000, 237.660000, 352.730000, 239.180000,
                3);
        bezierCurve(g2d, 352.730000, 239.180000, 349.400000, 240.180000, 346.510000, 240.200000, 344.670000, 240.080000,
                3);
        bezierCurve(g2d, 344.670000, 240.080000, 345.990000, 235.330000, 347.320000, 230.590000, 348.640000, 225.840000,
                3);
        bezierCurve(g2d, 366.270000, 228.720000, 368.210000, 228.300000, 370.710000, 227.590000, 373.470000, 226.340000,
                3);
        bezierCurve(g2d, 373.470000, 226.340000, 375.070000, 225.620000, 377.370000, 224.560000, 379.850000, 222.630000,
                3);
        bezierCurve(g2d, 379.850000, 222.630000, 383.880000, 219.480000, 384.990000, 216.670000, 385.750000, 217.010000,
                3);
        bezierCurve(g2d, 385.750000, 217.010000, 386.720000, 217.440000, 385.930000, 222.330000, 383.940000, 226.440000,
                3);
        bezierCurve(g2d, 383.940000, 226.440000, 382.470000, 229.480000, 380.640000, 231.480000, 378.990000, 233.300000,
                3);
        bezierCurve(g2d, 378.990000, 233.300000, 376.950000, 235.530000, 375.370000, 237.270000, 372.700000, 238.800000,
                3);
        bezierCurve(g2d, 372.700000, 238.800000, 370.200000, 240.240000, 367.780000, 240.890000, 365.950000, 241.200000,
                3);
        bezierCurve(g2d, 365.950000, 241.200000, 364.830000, 241.390000, 363.930000, 241.450000, 363.360000, 241.490000,
                3);
        bezierCurve(g2d, 363.360000, 241.490000, 358.200000, 241.820000, 354.190000, 240.290000, 352.180000, 239.350000,
                3);
        bresenhamLine(g2d, 352.180000, 239.350000, 366.250000, 228.730000);
        bezierCurve(g2d, 365.970000, 241.190000, 367.160000, 242.050000, 369.940000, 244.320000, 371.380000, 248.340000,
                3);
        bezierCurve(g2d, 371.380000, 248.340000, 371.810000, 249.540000, 372.750000, 252.280000, 372.050000, 255.580000,
                3);
        bezierCurve(g2d, 372.050000, 255.580000, 370.850000, 261.190000, 365.840000, 263.900000, 365.000000, 264.340000,
                3);
        bresenhamLine(g2d, 365.000000, 264.340000, 365.000000, 244.150000);
        bresenhamLine(g2d, 365.000000, 244.150000, 365.970000, 241.190000);
        bezierCurve(g2d, 300.000000, 245.670000, 287.440000, 249.240000, 274.970000, 246.910000, 274.900000, 245.670000,
                3);
        bezierCurve(g2d, 274.900000, 245.670000, 274.880000, 245.270000, 276.160000, 245.200000, 279.850000, 243.670000,
                3);
        bezierCurve(g2d, 279.850000, 243.670000, 281.480000, 242.990000, 284.890000, 241.560000, 288.330000, 239.290000,
                3);
        bezierCurve(g2d, 288.330000, 239.290000, 292.970000, 236.220000, 292.780000, 234.840000, 295.760000, 233.960000,
                3);
        bezierCurve(g2d, 295.760000, 233.960000, 298.060000, 233.280000, 300.000000, 233.550000, 302.900000, 233.960000,
                3);
        bezierCurve(g2d, 302.900000, 233.960000, 307.580000, 234.620000, 308.180000, 235.830000, 311.760000, 235.960000,
                3);
        bezierCurve(g2d, 311.760000, 235.960000, 315.920000, 236.110000, 318.280000, 234.580000, 318.490000, 235.020000,
                3);
        bezierCurve(g2d, 318.490000, 235.020000, 318.770000, 235.580000, 315.300000, 238.750000, 309.730000, 241.720000,
                3);
        bezierCurve(g2d, 309.730000, 241.720000, 306.940000, 243.200000, 303.630000, 244.640000, 299.990000, 245.670000,
                3);
        bezierCurve(g2d, 305.290000, 251.570000, 305.320000, 246.310000, 308.560000, 241.390000, 309.740000, 241.710000,
                3);
        bezierCurve(g2d, 309.740000, 241.710000, 310.690000, 241.970000, 309.860000, 245.530000, 310.340000, 252.760000,
                3);
        bezierCurve(g2d, 310.340000, 252.760000, 310.650000, 257.370000, 311.330000, 261.120000, 311.860000, 263.570000,
                3);
        bezierCurve(g2d, 311.860000, 263.570000, 310.660000, 262.770000, 308.090000, 260.810000, 306.530000, 257.280000,
                3);
        bezierCurve(g2d, 306.530000, 257.280000, 305.330000, 254.580000, 305.290000, 252.240000, 305.290000, 251.570000,
                3);
        bezierCurve(g2d, 312.620000, 271.950000, 314.560000, 271.320000, 317.450000, 270.620000, 321.000000, 270.620000,
                3);
        bezierCurve(g2d, 321.000000, 270.620000, 324.600000, 270.620000, 327.530000, 271.320000, 329.480000, 271.950000,
                3);
        bezierCurve(g2d, 349.950000, 272.900000, 351.760000, 272.330000, 354.790000, 271.630000, 358.520000, 271.950000,
                3);
        bezierCurve(g2d, 358.520000, 271.950000, 361.560000, 272.210000, 363.980000, 273.060000, 365.570000, 273.760000,
                3);
        bezierCurve(g2d, 324.900000, 291.190000, 325.070000, 290.570000, 325.630000, 288.240000, 324.420000, 285.760000,
                3);
        bezierCurve(g2d, 324.420000, 285.760000, 323.540000, 283.960000, 322.180000, 283.000000, 321.560000, 282.620000,
                3);
        bezierCurve(g2d, 321.560000, 282.620000, 314.890000, 282.840000, 308.230000, 283.060000, 301.560000, 283.290000,
                3);
        bezierCurve(g2d, 306.330000, 283.130000, 306.260000, 284.270000, 306.280000, 286.600000, 307.470000, 289.190000,
                3);
        bezierCurve(g2d, 307.470000, 289.190000, 308.680000, 291.820000, 310.470000, 293.360000, 311.370000, 294.050000,
                3);
        bezierCurve(g2d, 313.380000, 282.890000, 313.220000, 283.980000, 313.070000, 285.690000, 313.380000, 287.760000,
                3);
        bezierCurve(g2d, 313.380000, 287.760000, 313.680000, 289.790000, 313.870000, 291.050000, 314.910000, 291.950000,
                3);
        bezierCurve(g2d, 314.910000, 291.950000, 316.430000, 293.260000, 319.240000, 293.340000, 320.620000, 291.950000,
                3);
        bezierCurve(g2d, 320.620000, 291.950000, 321.640000, 290.930000, 321.570000, 289.440000, 321.480000, 287.420000,
                3);
        bezierCurve(g2d, 321.480000, 287.420000, 321.380000, 285.310000, 320.840000, 283.660000, 320.430000, 282.650000,
                3);
        bresenhamLine(g2d, 320.430000, 282.650000, 313.380000, 282.880000);
        bezierCurve(g2d, 310.810000, 292.490000, 312.460000, 293.250000, 315.280000, 294.190000, 318.770000, 293.600000,
                3);
        bezierCurve(g2d, 318.770000, 293.600000, 321.840000, 293.080000, 324.210000, 291.570000, 325.670000, 290.430000,
                3);
        bresenhamLine(g2d, 352.200000, 284.240000, 367.480000, 284.240000);
        bezierCurve(g2d, 367.480000, 284.240000, 367.140000, 286.130000, 366.460000, 288.600000, 365.000000, 291.190000,
                3);
        bezierCurve(g2d, 365.000000, 291.190000, 364.450000, 292.170000, 363.860000, 293.040000, 363.290000, 293.780000,
                3);
        bezierCurve(g2d, 353.380000, 283.760000, 353.050000, 284.910000, 352.550000, 286.310000, 351.760000, 287.810000,
                3);
        bezierCurve(g2d, 351.760000, 287.810000, 351.040000, 289.180000, 350.270000, 290.310000, 349.570000, 291.190000,
                3);
        bezierCurve(g2d, 352.200000, 292.970000, 353.590000, 293.430000, 355.480000, 293.910000, 357.760000, 294.050000,
                3);
        bezierCurve(g2d, 357.760000, 294.050000, 360.390000, 294.210000, 362.590000, 293.870000, 364.140000, 293.510000,
                3);
        bezierCurve(g2d, 353.380000, 284.710000, 353.600000, 285.770000, 353.940000, 287.250000, 354.430000, 289.010000,
                3);
        bezierCurve(g2d, 354.430000, 289.010000, 355.380000, 292.430000, 355.840000, 293.110000, 356.530000, 293.530000,
                3);
        bezierCurve(g2d, 356.530000, 293.530000, 357.490000, 294.110000, 358.920000, 294.210000, 359.840000, 293.530000,
                3);
        bezierCurve(g2d, 359.840000, 293.530000, 360.880000, 292.770000, 360.890000, 291.310000, 360.910000, 289.760000,
                3);
        bezierCurve(g2d, 360.910000, 289.760000, 360.920000, 288.660000, 360.780000, 286.850000, 359.840000, 284.710000,
                3);
        bresenhamLine(g2d, 359.840000, 284.710000, 353.380000, 284.710000);
        bresenhamLine(g2d, 286.330000, 225.230000, 274.230000, 235.380000);
        bezierCurve(g2d, 274.230000, 235.380000, 275.620000, 234.710000, 277.680000, 233.920000, 280.280000, 233.540000,
                3);
        bezierCurve(g2d, 280.280000, 233.540000, 282.750000, 233.180000, 284.840000, 233.320000, 286.330000, 233.540000,
                3);
        bezierCurve(g2d, 277.860000, 261.950000, 276.270000, 264.220000, 274.260000, 266.770000, 271.760000, 269.380000,
                3);
        bezierCurve(g2d, 271.760000, 269.380000, 269.370000, 271.880000, 267.020000, 273.920000, 264.900000, 275.570000,
                3);
        bezierCurve(g2d, 264.900000, 275.570000, 267.380000, 275.370000, 270.930000, 274.810000, 274.900000, 273.190000,
                3);
        bezierCurve(g2d, 274.900000, 273.190000, 278.840000, 271.590000, 281.760000, 269.530000, 283.660000, 267.950000,
                3);
        bezierCurve(g2d, 305.290000, 245.100000, 303.220000, 248.680000, 301.390000, 251.620000, 300.000000, 253.770000,
                3);
        bezierCurve(g2d, 300.000000, 253.770000, 297.200000, 258.120000, 295.810000, 260.290000, 294.240000, 261.960000,
                3);
        bezierCurve(g2d, 294.240000, 261.960000, 290.940000, 265.480000, 287.770000, 267.230000, 288.140000, 267.960000,
                3);
        bezierCurve(g2d, 288.140000, 267.960000, 288.530000, 268.730000, 292.240000, 266.970000, 292.900000, 267.960000,
                3);
        bezierCurve(g2d, 292.900000, 267.960000, 293.570000, 268.960000, 290.220000, 271.340000, 286.330000, 277.290000,
                3);
        bezierCurve(g2d, 286.330000, 277.290000, 283.870000, 281.050000, 282.350000, 283.440000, 281.950000, 286.910000,
                3);
        bezierCurve(g2d, 281.950000, 286.910000, 281.880000, 287.490000, 281.700000, 289.360000, 281.470000, 289.360000,
                3);
        bezierCurve(g2d, 281.470000, 289.360000, 281.150000, 289.360000, 281.780000, 285.650000, 279.760000, 283.770000,
                3);
        bezierCurve(g2d, 279.760000, 283.770000, 278.270000, 282.380000, 275.970000, 282.560000, 275.190000, 282.630000,
                3);
        bezierCurve(g2d, 275.190000, 282.630000, 274.450000, 282.690000, 272.670000, 282.950000, 271.090000, 284.250000,
                3);
        bezierCurve(g2d, 271.090000, 284.250000, 269.090000, 285.900000, 268.660000, 288.200000, 268.230000, 290.440000,
                3);
        bezierCurve(g2d, 268.230000, 290.440000, 267.730000, 293.070000, 267.950000, 295.090000, 268.230000, 297.580000,
                3);
        bezierCurve(g2d, 268.230000, 297.580000, 268.580000, 300.770000, 269.280000, 303.250000, 269.750000, 304.720000,
                3);
        bezierCurve(g2d, 269.750000, 304.720000, 270.460000, 306.910000, 271.250000, 309.310000, 273.080000, 311.960000,
                3);
        bezierCurve(g2d, 273.080000, 311.960000, 274.540000, 314.080000, 275.590000, 315.590000, 277.650000, 316.340000,
                3);
        bezierCurve(g2d, 277.650000, 316.340000, 278.090000, 316.500000, 280.540000, 317.340000, 282.980000, 316.340000,
                3);
        bezierCurve(g2d, 282.980000, 316.340000, 284.690000, 315.640000, 285.080000, 314.580000, 286.310000, 314.630000,
                3);
        bezierCurve(g2d, 286.310000, 314.630000, 287.020000, 314.660000, 287.890000, 315.050000, 289.260000, 316.920000,
                3);
        bezierCurve(g2d, 289.260000, 316.920000, 291.540000, 320.040000, 291.250000, 321.890000, 292.780000, 324.820000,
                3);
        bezierCurve(g2d, 292.780000, 324.820000, 294.010000, 327.180000, 295.530000, 328.550000, 297.640000, 330.440000,
                3);
        bezierCurve(g2d, 297.640000, 330.440000, 298.490000, 331.200000, 299.930000, 332.410000, 305.260000, 335.490000,
                3);
        bezierCurve(g2d, 305.260000, 335.490000, 309.820000, 338.130000, 310.040000, 337.980000, 314.500000, 340.540000,
                3);
        bezierCurve(g2d, 314.500000, 340.540000, 319.320000, 343.300000, 321.720000, 344.680000, 322.880000, 345.590000,
                3);
        bezierCurve(g2d, 322.880000, 345.590000, 324.010000, 346.470000, 325.920000, 348.090000, 328.980000, 349.300000,
                3);
        bezierCurve(g2d, 328.980000, 349.300000, 329.930000, 349.680000, 330.730000, 349.920000, 331.270000, 350.060000,
                3);
        bezierCurve(g2d, 331.270000, 350.060000, 332.300000, 349.030000, 334.010000, 347.470000, 336.410000, 345.960000,
                3);
        bezierCurve(g2d, 336.410000, 345.960000, 338.920000, 344.390000, 339.790000, 344.380000, 342.700000, 342.630000,
                3);
        bezierCurve(g2d, 342.700000, 342.630000, 344.570000, 341.500000, 345.920000, 340.450000, 348.600000, 338.340000,
                3);
        bezierCurve(g2d, 348.600000, 338.340000, 350.910000, 336.530000, 351.030000, 336.310000, 354.700000, 333.290000,
                3);
        bezierCurve(g2d, 354.700000, 333.290000, 358.670000, 330.020000, 359.220000, 329.710000, 361.460000, 327.770000,
                3);
        bezierCurve(g2d, 361.460000, 327.770000, 363.860000, 325.690000, 365.720000, 323.890000, 366.890000, 322.720000,
                3);
        bezierCurve(g2d, 366.890000, 322.720000, 366.810000, 320.790000, 366.740000, 317.770000, 366.890000, 314.050000,
                3);
        bezierCurve(g2d, 366.890000, 314.050000, 367.060000, 309.890000, 367.290000, 309.980000, 367.460000, 305.480000,
                3);
        bezierCurve(g2d, 367.460000, 305.480000, 367.610000, 301.420000, 367.480000, 299.770000, 367.940000, 296.240000,
                3);
        bezierCurve(g2d, 367.940000, 296.240000, 368.080000, 295.140000, 368.250000, 293.830000, 368.640000, 292.110000,
                3);
        bezierCurve(g2d, 368.640000, 292.110000, 369.500000, 288.290000, 370.290000, 287.420000, 370.990000, 284.720000,
                3);
        bezierCurve(g2d, 370.990000, 284.720000, 371.360000, 283.290000, 371.200000, 283.280000, 371.560000, 276.150000,
                3);
        bezierCurve(g2d, 371.560000, 276.150000, 371.840000, 270.580000, 371.940000, 270.620000, 372.040000, 267.580000,
                3);
        bezierCurve(g2d, 372.040000, 267.580000, 372.110000, 265.390000, 372.150000, 262.330000, 372.040000, 258.630000,
                3);
        bezierCurve(g2d, 347.100000, 214.900000, 346.890000, 203.120000, 347.290000, 200.180000, 347.770000, 200.140000,
                3);
        bezierCurve(g2d, 347.770000, 200.140000, 348.280000, 200.100000, 348.410000, 203.450000, 351.200000, 206.900000,
                3);
        bezierCurve(g2d, 351.200000, 206.900000, 352.370000, 208.340000, 353.660000, 209.380000, 354.820000, 210.310000,
                3);
        bezierCurve(g2d, 354.820000, 210.310000, 355.830000, 211.120000, 357.230000, 212.230000, 359.300000, 213.280000,
                3);
        bezierCurve(g2d, 359.300000, 213.280000, 360.940000, 214.110000, 362.420000, 214.600000, 363.490000, 214.900000,
                3);
        bezierCurve(g2d, 377.000000, 236.240000, 377.580000, 237.310000, 378.340000, 239.000000, 378.710000, 241.190000,
                3);
        bezierCurve(g2d, 378.710000, 241.190000, 378.770000, 241.530000, 379.530000, 246.160000, 378.330000, 246.620000,
                3);
        bezierCurve(g2d, 378.330000, 246.620000, 377.020000, 247.120000, 374.060000, 242.420000, 374.040000, 242.430000,
                3);
        bezierCurve(g2d, 374.040000, 242.430000, 373.960000, 242.500000, 378.710000, 248.720000, 378.710000, 248.720000,
                3);
        bezierCurve(g2d, 378.710000, 248.720000, 380.130000, 250.580000, 380.700000, 251.330000, 381.190000, 252.640000,
                3);
        bezierCurve(g2d, 381.190000, 252.640000, 381.650000, 253.900000, 381.460000, 254.140000, 382.140000, 256.770000,
                3);
        bezierCurve(g2d, 382.140000, 256.770000, 382.620000, 258.630000, 382.870000, 259.580000, 383.470000, 260.720000,
                3);
        bezierCurve(g2d, 383.470000, 260.720000, 384.040000, 261.800000, 384.630000, 262.530000, 385.470000, 263.580000,
                3);
        bezierCurve(g2d, 385.470000, 263.580000, 387.250000, 265.780000, 388.200000, 266.340000, 388.040000, 266.630000,
                3);
        bezierCurve(g2d, 388.040000, 266.630000, 387.810000, 267.050000, 385.450000, 266.260000, 378.800000, 263.580000,
                3);
        bezierCurve(g2d, 378.800000, 263.580000, 376.080000, 262.480000, 373.830000, 261.560000, 372.290000, 260.910000,
                3);
        bezierCurve(g2d, 380.180000, 264.330000, 379.880000, 265.400000, 379.570000, 266.920000, 379.570000, 268.760000,
                3);
        bezierCurve(g2d, 379.570000, 268.760000, 379.570000, 269.640000, 379.570000, 271.360000, 380.180000, 273.280000,
                3);
        bezierCurve(g2d, 380.180000, 273.280000, 381.010000, 275.920000, 382.170000, 276.450000, 383.660000, 279.180000,
                3);
        bezierCurve(g2d, 383.660000, 279.180000, 384.310000, 280.380000, 385.140000, 282.210000, 385.660000, 284.700000,
                3);
        bezierCurve(g2d, 385.660000, 284.700000, 383.100000, 283.240000, 380.530000, 281.780000, 377.950000, 280.320000,
                3);
        bezierCurve(g2d, 377.950000, 280.320000, 375.980000, 279.200000, 374.010000, 278.090000, 372.050000, 276.990000,
                3);
        bezierCurve(g2d, 336.430000, 204.140000, 334.700000, 204.370000, 332.450000, 204.480000, 329.860000, 204.140000,
                3);
        bezierCurve(g2d, 329.860000, 204.140000, 329.130000, 204.040000, 327.290000, 203.770000, 325.000000, 203.000000,
                3);
        bezierCurve(g2d, 325.000000, 203.000000, 323.460000, 202.480000, 322.780000, 202.100000, 319.000000, 200.140000,
                3);
        bezierCurve(g2d, 319.000000, 200.140000, 312.720000, 196.900000, 312.690000, 196.970000, 311.380000, 196.140000,
                3);
        bezierCurve(g2d, 311.380000, 196.140000, 308.240000, 194.140000, 307.040000, 192.820000, 306.710000, 193.090000,
                3);
        bezierCurve(g2d, 306.710000, 193.090000, 306.360000, 193.380000, 307.170000, 195.340000, 312.610000, 203.090000,
                3);
        bezierCurve(g2d, 312.610000, 203.090000, 309.230000, 202.760000, 306.380000, 202.650000, 304.230000, 202.610000,
                3);
        bezierCurve(g2d, 304.230000, 202.610000, 300.300000, 202.540000, 298.280000, 202.520000, 295.850000, 202.990000,
                3);
        bezierCurve(g2d, 295.850000, 202.990000, 293.020000, 203.540000, 293.420000, 203.950000, 289.370000, 204.890000,
                3);
        bezierCurve(g2d, 289.370000, 204.890000, 286.590000, 205.540000, 285.740000, 205.510000, 282.230000, 206.320000,
                3);
        bezierCurve(g2d, 282.230000, 206.320000, 279.010000, 207.070000, 279.130000, 207.230000, 277.660000, 207.510000,
                3);
        bezierCurve(g2d, 277.660000, 207.510000, 271.770000, 208.610000, 267.030000, 206.440000, 266.800000, 207.080000,
                3);
        bezierCurve(g2d, 266.800000, 207.080000, 266.550000, 207.810000, 273.030000, 209.640000, 273.280000, 213.080000,
                3);
        bezierCurve(g2d, 273.280000, 213.080000, 273.350000, 214.050000, 272.900000, 214.920000, 272.420000, 215.840000,
                3);
        bezierCurve(g2d, 272.420000, 215.840000, 271.530000, 217.570000, 270.290000, 218.510000, 268.900000, 219.550000,
                3);
        bezierCurve(g2d, 268.900000, 219.550000, 267.870000, 220.320000, 265.890000, 221.780000, 262.900000, 222.690000,
                3);
        bezierCurve(g2d, 262.900000, 222.690000, 260.250000, 223.500000, 257.890000, 223.560000, 257.090000, 223.560000,
                3);
        bezierCurve(g2d, 257.090000, 223.560000, 255.130000, 223.560000, 253.840000, 223.280000, 253.760000, 223.560000,
                3);
        bezierCurve(g2d, 253.760000, 223.560000, 253.630000, 224.020000, 257.240000, 224.650000, 259.760000, 227.350000,
                3);
        bezierCurve(g2d, 259.760000, 227.350000, 261.320000, 229.020000, 262.000000, 231.010000, 262.330000, 232.590000,
                3);
        bezierCurve(g2d, 262.330000, 232.590000, 261.210000, 234.260000, 259.620000, 236.950000, 258.430000, 240.520000,
                3);
        bezierCurve(g2d, 258.430000, 240.520000, 257.370000, 243.690000, 257.040000, 247.020000, 256.430000, 253.540000,
                3);
        bezierCurve(g2d, 256.430000, 253.540000, 255.880000, 259.420000, 255.710000, 263.690000, 255.670000, 264.870000,
                3);
        bezierCurve(g2d, 255.670000, 264.870000, 255.450000, 270.980000, 255.330000, 274.040000, 255.670000, 276.770000,
                3);
        bezierCurve(g2d, 255.670000, 276.770000, 256.060000, 279.910000, 256.370000, 283.060000, 256.810000, 286.200000,
                3);
        bezierCurve(g2d, 256.810000, 286.200000, 257.050000, 287.900000, 257.270000, 289.320000, 256.810000, 291.150000,
                3);
        bezierCurve(g2d, 256.810000, 291.150000, 256.150000, 293.780000, 254.640000, 295.080000, 255.000000, 295.530000,
                3);
        bezierCurve(g2d, 255.000000, 295.530000, 255.290000, 295.900000, 256.750000, 295.590000, 261.950000, 292.480000,
                3);
        bezierCurve(g2d, 261.950000, 292.480000, 261.250000, 296.550000, 261.780000, 299.540000, 262.330000, 301.430000,
                3);
        bezierCurve(g2d, 262.330000, 301.430000, 262.570000, 302.250000, 262.650000, 302.320000, 264.900000, 307.240000,
                3);
        bezierCurve(g2d, 264.900000, 307.240000, 267.630000, 313.230000, 267.680000, 313.520000, 268.420000, 314.570000,
                3);
        bezierCurve(g2d, 268.420000, 314.570000, 270.140000, 317.030000, 270.520000, 316.410000, 273.180000, 319.810000,
                3);
        bezierCurve(g2d, 273.180000, 319.810000, 275.480000, 322.750000, 276.610000, 325.020000, 276.990000, 325.810000,
                3);
        bezierCurve(g2d, 276.990000, 325.810000, 277.780000, 327.470000, 278.290000, 328.930000, 278.610000, 330.000000,
                3);
        bezierCurve(g2d, 274.900000, 289.360000, 277.500000, 290.540000, 278.440000, 291.920000, 278.810000, 292.970000,
                3);
        bezierCurve(g2d, 278.810000, 292.970000, 279.650000, 295.350000, 277.860000, 296.770000, 278.810000, 299.480000,
                3);
        bezierCurve(g2d, 278.810000, 299.480000, 279.410000, 301.210000, 280.310000, 301.120000, 281.480000, 303.580000,
                3);
        bezierCurve(g2d, 281.480000, 303.580000, 282.120000, 304.940000, 283.030000, 307.440000, 282.430000, 307.870000,
                3);
        bezierCurve(g2d, 282.430000, 307.870000, 281.950000, 308.210000, 280.310000, 307.340000, 274.910000, 301.490000,
                3);
        bezierCurve(g2d, 341.190000, 309.860000, 341.140000, 310.600000, 341.210000, 311.480000, 341.760000, 312.150000,
                3);
        bezierCurve(g2d, 341.760000, 312.150000, 342.470000, 313.010000, 343.580000, 313.060000, 343.570000, 313.390000,
                3);
        bezierCurve(g2d, 343.570000, 313.390000, 343.570000, 313.610000, 343.070000, 313.870000, 341.190000, 314.150000,
                3);
        bezierCurve(g2d, 329.480000, 333.950000, 330.840000, 333.320000, 332.810000, 332.590000, 335.290000, 332.240000,
                3);
        bezierCurve(g2d, 335.290000, 332.240000, 337.690000, 331.900000, 339.730000, 332.030000, 341.180000, 332.240000,
                3);
        bezierCurve(g2d, 289.290000, 316.900000, 288.010000, 321.030000, 287.290000, 324.640000, 286.860000, 327.490000,
                3);
        bezierCurve(g2d, 286.860000, 327.490000, 286.660000, 328.830000, 286.330000, 331.250000, 286.170000, 334.320000,
                3);
        bezierCurve(g2d, 286.170000, 334.320000, 286.000000, 337.480000, 286.100000, 339.270000, 286.170000, 342.980000,
                3);
        bezierCurve(g2d, 286.170000, 342.980000, 286.210000, 345.310000, 286.240000, 348.740000, 286.170000, 352.990000,
                3);
        bezierCurve(g2d, 332.480000, 348.920000, 331.980000, 352.850000, 331.330000, 356.020000, 330.810000, 358.230000,
                3);
        bezierCurve(g2d, 330.810000, 358.230000, 330.320000, 360.300000, 329.950000, 361.560000, 328.520000, 367.090000,
                3);
        bezierCurve(g2d, 328.520000, 367.090000, 327.990000, 369.130000, 327.570000, 370.810000, 327.280000, 371.950000,
                3);
        bezierCurve(g2d, 275.380000, 335.860000, 274.550000, 337.450000, 273.730000, 339.030000, 272.900000, 340.620000,
                3);
        bezierCurve(g2d, 272.900000, 340.620000, 272.870000, 342.710000, 272.770000, 346.000000, 272.420000, 350.050000,
                3);
        bezierCurve(g2d, 272.420000, 350.050000, 271.980000, 355.250000, 271.540000, 356.780000, 271.940000, 359.480000,
                3);
        bezierCurve(g2d, 271.940000, 359.480000, 272.090000, 360.520000, 272.480000, 362.480000, 276.130000, 368.810000,
                3);
        bezierCurve(g2d, 276.130000, 368.810000, 277.400000, 371.020000, 279.820000, 375.060000, 284.510000, 381.570000,
                3);
        bezierCurve(g2d, 284.510000, 381.570000, 287.490000, 385.700000, 289.070000, 387.910000, 291.560000, 390.810000,
                3);
        bezierCurve(g2d, 291.560000, 390.810000, 295.340000, 395.220000, 298.850000, 398.520000, 301.370000, 400.710000,
                3);
        bezierCurve(g2d, 301.370000, 400.710000, 301.590000, 395.930000, 301.990000, 390.830000, 302.610000, 385.470000,
                3);
        bezierCurve(g2d, 302.610000, 385.470000, 303.230000, 380.100000, 304.020000, 375.040000, 304.900000, 370.330000,
                3);
        bezierCurve(g2d, 304.900000, 370.330000, 303.670000, 369.060000, 302.020000, 367.440000, 300.000000, 365.660000,
                3);
        bezierCurve(g2d, 300.000000, 365.660000, 296.840000, 362.890000, 296.070000, 362.630000, 293.290000, 360.040000,
                3);
        bezierCurve(g2d, 293.290000, 360.040000, 291.840000, 358.690000, 292.080000, 358.790000, 288.430000, 355.180000,
                3);
        bezierCurve(g2d, 288.430000, 355.180000, 286.950000, 353.720000, 285.930000, 352.710000, 284.530000, 351.370000,
                3);
        bezierCurve(g2d, 284.530000, 351.370000, 280.520000, 347.540000, 279.970000, 347.300000, 278.770000, 345.660000,
                3);
        bezierCurve(g2d, 278.770000, 345.660000, 277.280000, 343.620000, 276.560000, 341.880000, 276.240000, 340.990000,
                3);
        bezierCurve(g2d, 276.240000, 340.990000, 275.680000, 339.450000, 275.130000, 337.870000, 275.380000, 335.850000,
                3);
        bezierCurve(g2d, 275.380000, 335.850000, 275.510000, 334.830000, 275.710000, 333.220000, 277.000000, 332.020000,
                3);
        bezierCurve(g2d, 277.000000, 332.020000, 278.240000, 330.870000, 279.770000, 330.770000, 280.810000, 330.700000,
                3);
        bezierCurve(g2d, 280.810000, 330.700000, 283.230000, 330.540000, 285.120000, 331.460000, 286.070000, 332.020000,
                3);
        bezierCurve(g2d, 345.890000, 340.450000, 346.970000, 341.590000, 348.440000, 343.280000, 349.950000, 345.480000,
                3);
        bezierCurve(g2d, 349.950000, 345.480000, 351.250000, 347.380000, 352.040000, 348.860000, 353.760000, 352.240000,
                3);
        bezierCurve(g2d, 353.760000, 352.240000, 356.770000, 358.160000, 358.280000, 361.120000, 358.620000, 362.050000,
                3);
        bezierCurve(g2d, 358.620000, 362.050000, 360.300000, 366.670000, 360.810000, 370.600000, 361.000000, 372.720000,
                3);
        bezierCurve(g2d, 361.000000, 372.720000, 361.260000, 375.650000, 361.170000, 378.150000, 361.000000, 380.050000,
                3);
        bezierCurve(g2d, 361.000000, 380.050000, 359.150000, 385.090000, 357.090000, 389.020000, 355.480000, 391.760000,
                3);
        bezierCurve(g2d, 355.480000, 391.760000, 354.640000, 393.180000, 354.540000, 393.250000, 347.860000, 402.620000,
                3);
        bezierCurve(g2d, 347.860000, 402.620000, 343.950000, 408.100000, 342.530000, 410.130000, 341.960000, 409.860000,
                3);
        bezierCurve(g2d, 341.960000, 409.860000, 341.270000, 409.530000, 342.890000, 406.350000, 343.200000, 400.720000,
                3);
        bezierCurve(g2d, 343.200000, 400.720000, 343.430000, 396.550000, 342.820000, 393.260000, 342.380000, 391.010000,
                3);
        bezierCurve(g2d, 342.380000, 391.010000, 342.230000, 390.210000, 341.760000, 387.880000, 339.580000, 381.680000,
                3);
        bezierCurve(g2d, 339.580000, 381.680000, 338.600000, 378.880000, 337.200000, 375.090000, 335.330000, 370.630000,
                3);
        bezierCurve(g2d, 335.330000, 370.630000, 335.200000, 370.470000, 335.070000, 370.310000, 334.940000, 370.150000,
                3);
        bezierCurve(g2d, 334.940000, 370.150000, 333.120000, 367.910000, 331.300000, 365.680000, 329.480000, 363.440000,
                3);
        bresenhamLine(g2d, 301.960000, 392.020000, 312.810000, 392.020000);
        bezierCurve(g2d, 312.810000, 392.020000, 314.940000, 393.810000, 317.060000, 395.600000, 319.190000, 397.390000,
                3);
        bresenhamLine(g2d, 328.050000, 396.520000, 331.670000, 392.010000);
        bresenhamLine(g2d, 331.670000, 392.010000, 342.570000, 392.010000);
        bezierCurve(g2d, 301.620000, 396.520000, 302.720000, 397.340000, 304.310000, 398.440000, 306.340000, 399.570000,
                3);
        bezierCurve(g2d, 306.340000, 399.570000, 309.000000, 401.050000, 311.010000, 401.780000, 314.630000, 403.090000,
                3);
        bezierCurve(g2d, 314.630000, 403.090000, 319.880000, 405.000000, 321.720000, 405.210000, 322.530000, 405.280000,
                3);
        bezierCurve(g2d, 322.530000, 405.280000, 324.110000, 405.420000, 325.370000, 405.350000, 326.630000, 405.280000,
                3);
        bezierCurve(g2d, 326.630000, 405.280000, 329.300000, 405.130000, 331.230000, 405.030000, 333.490000, 404.230000,
                3);
        bezierCurve(g2d, 333.490000, 404.230000, 335.390000, 403.560000, 336.690000, 402.670000, 339.300000, 400.900000,
                3);
        bezierCurve(g2d, 339.300000, 400.900000, 340.990000, 399.750000, 342.330000, 398.700000, 343.240000, 397.940000,
                3);
        bezierCurve(g2d, 272.580000, 348.130000, 270.850000, 350.400000, 268.440000, 353.340000, 265.290000, 356.530000,
                3);
        bezierCurve(g2d, 265.290000, 356.530000, 261.220000, 360.650000, 257.770000, 363.300000, 254.620000, 365.710000,
                3);
        bezierCurve(g2d, 254.620000, 365.710000, 247.890000, 370.860000, 242.130000, 374.220000, 239.380000, 375.770000,
                3);
        bezierCurve(g2d, 239.380000, 375.770000, 236.820000, 377.210000, 231.760000, 380.030000, 224.810000, 382.820000,
                3);
        bezierCurve(g2d, 224.810000, 382.820000, 220.140000, 384.700000, 217.320000, 385.470000, 211.480000, 388.150000,
                3);
        bezierCurve(g2d, 211.480000, 388.150000, 206.810000, 390.290000, 204.440000, 391.400000, 203.000000, 392.910000,
                3);
        bezierCurve(g2d, 203.000000, 392.910000, 201.300000, 394.700000, 201.360000, 395.600000, 197.760000, 406.530000,
                3);
        bezierCurve(g2d, 197.760000, 406.530000, 195.760000, 412.620000, 195.130000, 414.200000, 194.620000, 417.480000,
                3);
        bezierCurve(g2d, 194.620000, 417.480000, 194.080000, 420.940000, 194.370000, 421.830000, 194.050000, 425.000000,
                3);
        bezierCurve(g2d, 194.050000, 425.000000, 193.330000, 432.190000, 191.310000, 433.070000, 190.050000, 439.480000,
                3);
        bezierCurve(g2d, 190.050000, 439.480000, 189.730000, 441.080000, 189.780000, 441.430000, 190.050000, 457.100000,
                3);
        bezierCurve(g2d, 190.050000, 457.100000, 190.220000, 466.810000, 190.210000, 467.300000, 190.050000, 468.530000,
                3);
        bezierCurve(g2d, 190.050000, 468.530000, 189.760000, 470.780000, 189.390000, 472.240000, 185.860000, 483.860000,
                3);
        bezierCurve(g2d, 185.860000, 483.860000, 183.420000, 491.920000, 183.320000, 492.140000, 183.000000, 493.570000,
                3);
        bezierCurve(g2d, 183.000000, 493.570000, 181.700000, 499.530000, 182.420000, 500.330000, 181.380000, 507.860000,
                3);
        bezierCurve(g2d, 181.380000, 507.860000, 180.490000, 514.280000, 179.950000, 513.830000, 178.240000, 524.050000,
                3);
        bezierCurve(g2d, 178.240000, 524.050000, 177.360000, 529.300000, 177.420000, 529.940000, 176.720000, 532.530000,
                3);
        bezierCurve(g2d, 176.720000, 532.530000, 175.650000, 536.470000, 174.360000, 539.290000, 172.150000, 544.050000,
                3);
        bezierCurve(g2d, 172.150000, 544.050000, 168.720000, 551.430000, 168.310000, 550.980000, 167.100000, 554.530000,
                3);
        bezierCurve(g2d, 167.100000, 554.530000, 165.680000, 558.710000, 165.340000, 562.040000, 164.910000, 566.340000,
                3);
        bezierCurve(g2d, 164.910000, 566.340000, 164.340000, 572.000000, 164.050000, 574.830000, 164.910000, 577.960000,
                3);
        bezierCurve(g2d, 164.910000, 577.960000, 165.750000, 581.000000, 166.600000, 581.200000, 168.150000, 586.150000,
                3);
        bezierCurve(g2d, 168.150000, 586.150000, 169.650000, 590.930000, 168.910000, 590.920000, 170.050000, 592.820000,
                3);
        bezierCurve(g2d, 170.050000, 592.820000, 171.490000, 595.200000, 173.400000, 596.470000, 174.620000, 600.010000,
                3);
        bezierCurve(g2d, 174.620000, 600.010000, 174.800000, 600.550000, 174.930000, 601.000000, 175.000000, 601.300000,
                3);
        bresenhamLine(g2d, 175.000000, 601.300000, 179.100000, 601.300000);
        bezierCurve(g2d, 179.100000, 601.300000, 179.080000, 601.000000, 179.020000, 600.550000, 178.910000, 600.010000,
                3);
        bezierCurve(g2d, 178.910000, 600.010000, 178.470000, 597.950000, 177.490000, 596.610000, 177.010000, 595.870000,
                3);
        bezierCurve(g2d, 177.010000, 595.870000, 176.330000, 594.840000, 175.770000, 593.250000, 174.630000, 590.060000,
                3);
        bezierCurve(g2d, 174.630000, 590.060000, 173.660000, 587.340000, 173.060000, 585.660000, 172.730000, 583.390000,
                3);
        bezierCurve(g2d, 172.730000, 583.390000, 172.480000, 581.710000, 172.560000, 579.920000, 172.730000, 576.340000,
                3);
        bezierCurve(g2d, 172.730000, 576.340000, 172.910000, 572.480000, 173.010000, 570.420000, 173.680000, 567.670000,
                3);
        bezierCurve(g2d, 173.680000, 567.670000, 174.140000, 565.790000, 174.280000, 565.960000, 174.920000, 563.570000,
                3);
        bezierCurve(g2d, 174.920000, 563.570000, 175.890000, 559.920000, 175.710000, 558.920000, 176.350000, 555.950000,
                3);
        bezierCurve(g2d, 176.350000, 555.950000, 177.080000, 552.540000, 178.130000, 550.120000, 179.680000, 546.520000,
                3);
        bezierCurve(g2d, 179.680000, 546.520000, 181.110000, 543.220000, 182.270000, 541.190000, 182.730000, 540.420000,
                3);
        bezierCurve(g2d, 182.730000, 540.420000, 183.720000, 538.740000, 183.780000, 538.870000, 184.160000, 538.130000,
                3);
        bezierCurve(g2d, 184.160000, 538.130000, 185.750000, 535.020000, 184.840000, 532.380000, 184.640000, 528.030000,
                3);
        bezierCurve(g2d, 184.640000, 528.030000, 184.520000, 525.560000, 184.840000, 526.860000, 185.310000, 518.790000,
                3);
        bezierCurve(g2d, 185.310000, 518.790000, 185.720000, 511.630000, 185.420000, 511.530000, 185.880000, 508.790000,
                3);
        bezierCurve(g2d, 185.880000, 508.790000, 186.530000, 504.880000, 187.660000, 502.000000, 188.740000, 499.270000,
                3);
        bezierCurve(g2d, 188.740000, 499.270000, 190.440000, 494.940000, 190.920000, 495.070000, 193.310000, 489.460000,
                3);
        bezierCurve(g2d, 193.310000, 489.460000, 194.400000, 486.910000, 195.600000, 484.070000, 196.740000, 480.130000,
                3);
        bezierCurve(g2d, 196.740000, 480.130000, 197.850000, 476.270000, 198.340000, 473.310000, 198.450000, 472.610000,
                3);
        bezierCurve(g2d, 198.450000, 472.610000, 198.800000, 470.400000, 198.940000, 468.630000, 199.210000, 465.090000,
                3);
        bezierCurve(g2d, 199.210000, 465.090000, 199.530000, 460.910000, 199.410000, 460.910000, 199.690000, 457.570000,
                3);
        bezierCurve(g2d, 199.690000, 457.570000, 200.060000, 453.180000, 200.280000, 453.130000, 200.540000, 449.380000,
                3);
        bezierCurve(g2d, 200.540000, 449.380000, 200.810000, 445.480000, 200.600000, 445.140000, 200.920000, 442.810000,
                3);
        bezierCurve(g2d, 200.920000, 442.810000, 201.360000, 439.660000, 202.140000, 437.440000, 202.630000, 435.950000,
                3);
        bezierCurve(g2d, 202.630000, 435.950000, 203.660000, 432.880000, 205.020000, 428.280000, 206.440000, 421.760000,
                3);
        bezierCurve(g2d, 206.440000, 421.760000, 208.030000, 418.170000, 208.900000, 415.160000, 209.390000, 413.090000,
                3);
        bezierCurve(g2d, 209.390000, 413.090000, 210.160000, 409.870000, 210.210000, 408.210000, 211.210000, 405.360000,
                3);
        bezierCurve(g2d, 211.210000, 405.360000, 212.240000, 402.420000, 213.570000, 400.220000, 214.510000, 398.840000,
                3);
        bezierCurve(g2d, 203.000000, 392.900000, 203.990000, 392.340000, 205.930000, 391.430000, 207.950000, 392.010000,
                3);
        bezierCurve(g2d, 207.950000, 392.010000, 209.110000, 392.340000, 209.900000, 393.040000, 212.140000, 395.850000,
                3);
        bezierCurve(g2d, 212.140000, 395.850000, 214.270000, 398.520000, 215.340000, 399.850000, 216.810000, 402.140000,
                3);
        bezierCurve(g2d, 216.810000, 402.140000, 218.410000, 404.630000, 219.760000, 406.730000, 220.910000, 409.280000,
                3);
        bezierCurve(g2d, 220.910000, 409.280000, 222.250000, 412.260000, 222.500000, 414.050000, 223.860000, 421.280000,
                3);
        bezierCurve(g2d, 223.860000, 421.280000, 224.460000, 424.480000, 225.410000, 429.510000, 226.430000, 434.420000,
                3);
        bezierCurve(g2d, 226.430000, 434.420000, 226.620000, 435.340000, 227.540000, 439.410000, 229.380000, 447.560000,
                3);
        bezierCurve(g2d, 229.380000, 447.560000, 230.730000, 453.550000, 230.940000, 454.460000, 231.480000, 456.130000,
                3);
        bezierCurve(g2d, 231.480000, 456.130000, 232.990000, 460.860000, 233.650000, 460.920000, 235.380000, 465.840000,
                3);
        bezierCurve(g2d, 235.380000, 465.840000, 236.840000, 469.970000, 237.550000, 473.260000, 238.520000, 477.740000,
                3);
        bezierCurve(g2d, 238.520000, 477.740000, 239.300000, 481.320000, 239.690000, 483.140000, 239.950000, 485.840000,
                3);
        bezierCurve(g2d, 239.950000, 485.840000, 240.170000, 488.150000, 240.490000, 491.400000, 239.950000, 495.170000,
                3);
        bezierCurve(g2d, 239.950000, 495.170000, 239.550000, 497.990000, 238.500000, 500.580000, 236.430000, 505.650000,
                3);
        bezierCurve(g2d, 236.430000, 505.650000, 234.960000, 509.250000, 234.180000, 510.820000, 230.910000, 518.030000,
                3);
        bezierCurve(g2d, 230.910000, 518.030000, 226.790000, 527.110000, 227.140000, 526.540000, 226.620000, 527.460000,
                3);
        bezierCurve(g2d, 226.620000, 527.460000, 225.600000, 529.260000, 224.830000, 530.400000, 217.950000, 540.410000,
                3);
        bezierCurve(g2d, 217.950000, 540.410000, 217.840000, 540.570000, 216.030000, 543.210000, 215.920000, 543.370000,
                3);
        bezierCurve(g2d, 211.200000, 394.700000, 208.350000, 397.910000, 206.970000, 400.810000, 206.240000, 402.910000,
                3);
        bezierCurve(g2d, 206.240000, 402.910000, 205.800000, 404.160000, 205.610000, 405.110000, 203.050000, 413.980000,
                3);
        bezierCurve(g2d, 203.050000, 413.980000, 203.050000, 414.010000, 203.000000, 414.140000, 203.000000, 414.150000,
                3);
        bezierCurve(g2d, 203.000000, 414.150000, 202.020000, 417.540000, 200.860000, 421.420000, 199.480000, 425.770000,
                3);
        bezierCurve(g2d, 199.480000, 425.770000, 198.900000, 429.020000, 198.110000, 433.340000, 197.100000, 438.440000,
                3);
        bezierCurve(g2d, 197.100000, 438.440000, 196.210000, 442.910000, 195.160000, 448.200000, 193.580000, 455.010000,
                3);
        bezierCurve(g2d, 193.580000, 455.010000, 192.670000, 458.940000, 191.440000, 463.980000, 189.850000, 469.850000,
                3);
        bezierCurve(g2d, 253.480000, 443.100000, 252.820000, 445.060000, 251.870000, 448.050000, 251.000000, 451.770000,
                3);
        bezierCurve(g2d, 251.000000, 451.770000, 249.980000, 456.120000, 249.790000, 458.320000, 248.810000, 464.530000,
                3);
        bezierCurve(g2d, 248.810000, 464.530000, 247.810000, 470.840000, 246.940000, 475.260000, 246.240000, 478.820000,
                3);
        bezierCurve(g2d, 246.240000, 478.820000, 244.620000, 487.030000, 243.800000, 489.790000, 242.530000, 492.720000,
                3);
        bezierCurve(g2d, 242.530000, 492.720000, 241.240000, 495.700000, 239.850000, 498.010000, 238.840000, 499.550000,
                3);
        bezierCurve(g2d, 231.290000, 455.540000, 235.270000, 455.310000, 238.530000, 454.660000, 240.910000, 454.050000,
                3);
        bezierCurve(g2d, 240.910000, 454.050000, 244.630000, 453.090000, 246.930000, 452.020000, 247.480000, 451.760000,
                3);
        bezierCurve(g2d, 247.480000, 451.760000, 249.200000, 450.950000, 250.570000, 450.120000, 251.580000, 449.450000,
                3);
        bezierCurve(g2d, 234.510000, 463.540000, 237.100000, 463.900000, 238.990000, 463.520000, 240.250000, 463.090000,
                3);
        bezierCurve(g2d, 240.250000, 463.090000, 242.040000, 462.490000, 242.800000, 461.720000, 245.100000, 460.800000,
                3);
        bezierCurve(g2d, 245.100000, 460.800000, 246.920000, 460.080000, 248.510000, 459.740000, 249.570000, 459.580000,
                3);
        bezierCurve(g2d, 252.490000, 446.170000, 254.820000, 445.190000, 258.550000, 443.710000, 263.280000, 442.230000,
                3);
        bezierCurve(g2d, 263.280000, 442.230000, 267.180000, 441.020000, 268.050000, 440.960000, 273.310000, 439.440000,
                3);
        bezierCurve(g2d, 273.310000, 439.440000, 276.690000, 438.460000, 279.860000, 437.420000, 286.060000, 435.380000,
                3);
        bezierCurve(g2d, 286.060000, 435.380000, 295.850000, 432.160000, 295.550000, 432.120000, 298.330000, 431.320000,
                3);
        bezierCurve(g2d, 298.330000, 431.320000, 301.810000, 430.320000, 306.850000, 429.050000, 313.190000, 428.150000,
                3);
        bezierCurve(g2d, 300.440000, 399.880000, 303.700000, 403.730000, 305.980000, 407.440000, 307.600000, 410.620000,
                3);
        bezierCurve(g2d, 307.600000, 410.620000, 309.310000, 413.970000, 310.270000, 416.690000, 311.660000, 420.650000,
                3);
        bezierCurve(g2d, 311.660000, 420.650000, 313.120000, 424.790000, 313.130000, 425.440000, 315.470000, 432.970000,
                3);
        bezierCurve(g2d, 315.470000, 432.970000, 317.320000, 438.910000, 318.240000, 441.870000, 319.180000, 444.400000,
                3);
        bezierCurve(g2d, 319.180000, 444.400000, 321.220000, 449.870000, 322.300000, 451.620000, 323.590000, 456.460000,
                3);
        bezierCurve(g2d, 323.590000, 456.460000, 324.270000, 459.030000, 324.650000, 461.060000, 324.990000, 462.940000,
                3);
        bezierCurve(g2d, 324.990000, 462.940000, 325.410000, 465.230000, 326.220000, 469.680000, 326.390000, 473.990000,
                3);
        bezierCurve(g2d, 326.390000, 473.990000, 326.540000, 477.880000, 326.060000, 478.680000, 325.120000, 486.690000,
                3);
        bezierCurve(g2d, 325.120000, 486.690000, 324.680000, 490.460000, 324.360000, 494.530000, 323.720000, 502.690000,
                3);
        bezierCurve(g2d, 323.720000, 502.690000, 323.210000, 509.240000, 323.310000, 508.950000, 322.700000, 516.790000,
                3);
        bezierCurve(g2d, 322.700000, 516.790000, 322.120000, 524.340000, 321.980000, 525.160000, 321.680000, 529.740000,
                3);
        bezierCurve(g2d, 321.680000, 529.740000, 321.600000, 530.980000, 321.250000, 536.320000, 321.050000, 542.690000,
                3);
        bezierCurve(g2d, 321.050000, 542.690000, 320.700000, 553.400000, 321.160000, 553.810000, 320.920000, 563.010000,
                3);
        bezierCurve(g2d, 320.920000, 563.010000, 320.540000, 577.920000, 319.280000, 578.210000, 319.900000, 585.230000,
                3);
        bezierCurve(g2d, 319.900000, 585.230000, 320.050000, 586.910000, 320.610000, 592.430000, 320.660000, 600.010000,
                3);
        bezierCurve(g2d, 320.660000, 600.010000, 320.660000, 601.010000, 320.660000, 601.830000, 320.660000, 602.380000,
                3);
        bezierCurve(g2d, 250.320000, 454.960000, 252.530000, 454.640000, 255.680000, 454.160000, 259.470000, 453.540000,
                3);
        bezierCurve(g2d, 259.470000, 453.540000, 269.160000, 451.950000, 271.560000, 451.290000, 272.570000, 451.000000,
                3);
        bezierCurve(g2d, 272.570000, 451.000000, 275.540000, 450.140000, 277.970000, 449.120000, 282.830000, 447.060000,
                3);
        bezierCurve(g2d, 282.830000, 447.060000, 290.270000, 443.920000, 290.820000, 443.150000, 295.650000, 441.470000,
                3);
        bezierCurve(g2d, 295.650000, 441.470000, 299.950000, 439.980000, 303.420000, 439.230000, 305.430000, 438.800000,
                3);
        bezierCurve(g2d, 305.430000, 438.800000, 309.760000, 437.880000, 313.610000, 437.400000, 316.770000, 437.150000,
                3);
        bezierCurve(g2d, 254.140000, 549.670000, 256.670000, 551.350000, 260.510000, 554.090000, 264.810000, 557.920000,
                3);
        bezierCurve(g2d, 264.810000, 557.920000, 270.950000, 563.410000, 271.410000, 565.230000, 277.640000, 571.000000,
                3);
        bezierCurve(g2d, 277.640000, 571.000000, 281.300000, 574.390000, 284.950000, 577.110000, 292.240000, 582.560000,
                3);
        bezierCurve(g2d, 292.240000, 582.560000, 294.190000, 584.010000, 298.850000, 587.460000, 305.070000, 591.700000,
                3);
        bezierCurve(g2d, 305.070000, 591.700000, 309.860000, 594.970000, 314.160000, 597.740000, 317.770000, 600.000000,
                3);
        bezierCurve(g2d, 317.770000, 600.000000, 318.020000, 600.790000, 318.280000, 601.580000, 318.530000, 602.370000,
                3);
        bezierCurve(g2d, 306.810000, 438.530000, 308.090000, 442.370000, 309.020000, 445.570000, 309.640000, 447.820000,
                3);
        bezierCurve(g2d, 309.640000, 447.820000, 310.670000, 451.590000, 310.840000, 452.690000, 312.560000, 459.580000,
                3);
        bezierCurve(g2d, 312.560000, 459.580000, 314.490000, 467.300000, 314.460000, 466.610000, 314.850000, 468.650000,
                3);
        bezierCurve(g2d, 314.850000, 468.650000, 315.800000, 473.640000, 315.960000, 477.560000, 316.120000, 481.860000,
                3);
        bezierCurve(g2d, 316.120000, 481.860000, 316.250000, 485.450000, 316.080000, 484.740000, 316.120000, 494.560000,
                3);
        bezierCurve(g2d, 316.120000, 494.560000, 316.150000, 500.450000, 316.210000, 500.970000, 316.120000, 503.450000,
                3);
        bezierCurve(g2d, 316.120000, 503.450000, 316.070000, 504.720000, 315.910000, 508.780000, 315.230000, 514.240000,
                3);
        bezierCurve(g2d, 315.230000, 514.240000, 314.180000, 522.750000, 313.380000, 522.620000, 313.440000, 527.070000,
                3);
        bezierCurve(g2d, 313.440000, 527.070000, 313.480000, 530.390000, 313.940000, 531.720000, 313.440000, 534.940000,
                3);
        bezierCurve(g2d, 313.440000, 534.940000, 312.970000, 537.930000, 312.230000, 538.970000, 311.470000, 541.670000,
                3);
        bezierCurve(g2d, 311.470000, 541.670000, 310.610000, 544.720000, 310.850000, 545.860000, 310.530000, 552.970000,
                3);
        bezierCurve(g2d, 310.530000, 552.970000, 310.130000, 562.060000, 309.670000, 561.360000, 309.640000, 567.070000,
                3);
        bezierCurve(g2d, 309.640000, 567.070000, 309.610000, 572.470000, 310.020000, 572.350000, 309.890000, 577.990000,
                3);
        bezierCurve(g2d, 309.890000, 577.990000, 309.860000, 579.190000, 309.760000, 583.170000, 309.260000, 588.400000,
                3);
        bezierCurve(g2d, 309.260000, 588.400000, 309.040000, 590.670000, 308.800000, 592.600000, 308.600000, 594.080000,
                3);
        bezierCurve(g2d, 343.230000, 408.920000, 343.980000, 414.570000, 344.040000, 419.290000, 343.920000, 422.690000,
                3);
        bezierCurve(g2d, 343.920000, 422.690000, 343.770000, 427.150000, 343.670000, 430.150000, 342.560000, 433.990000,
                3);
        bezierCurve(g2d, 342.560000, 433.990000, 341.410000, 437.970000, 340.580000, 437.970000, 337.690000, 444.530000,
                3);
        bezierCurve(g2d, 337.690000, 444.530000, 336.270000, 447.750000, 334.440000, 451.960000, 333.120000, 457.480000,
                3);
        bezierCurve(g2d, 333.120000, 457.480000, 332.120000, 461.670000, 331.820000, 464.910000, 331.600000, 467.380000,
                3);
        bezierCurve(g2d, 331.600000, 467.380000, 330.860000, 475.670000, 332.070000, 476.210000, 331.600000, 485.030000,
                3);
        bezierCurve(g2d, 331.600000, 485.030000, 331.240000, 491.810000, 330.460000, 492.750000, 330.460000, 499.540000,
                3);
        bezierCurve(g2d, 330.460000, 499.540000, 330.460000, 503.390000, 330.710000, 504.160000, 330.460000, 507.000000,
                3);
        bezierCurve(g2d, 330.460000, 507.000000, 329.980000, 512.360000, 328.690000, 514.120000, 327.540000, 519.060000,
                3);
        bezierCurve(g2d, 327.540000, 519.060000, 326.750000, 522.470000, 326.640000, 526.410000, 326.420000, 534.300000,
                3);
        bezierCurve(g2d, 326.420000, 534.300000, 326.340000, 537.120000, 326.380000, 537.790000, 326.420000, 547.890000,
                3);
        bezierCurve(g2d, 326.420000, 547.890000, 326.460000, 557.020000, 326.480000, 561.640000, 326.420000, 564.140000,
                3);
        bezierCurve(g2d, 326.420000, 564.140000, 326.170000, 575.340000, 325.500000, 573.530000, 325.630000, 580.390000,
                3);
        bezierCurve(g2d, 325.630000, 580.390000, 325.770000, 587.870000, 326.690000, 596.760000, 327.030000, 599.990000,
                3);
        bezierCurve(g2d, 327.030000, 599.990000, 327.130000, 600.980000, 327.220000, 601.800000, 327.280000, 602.360000,
                3);
        bezierCurve(g2d, 360.560000, 369.330000, 361.920000, 371.700000, 364.220000, 375.290000, 367.800000, 379.000000,
                3);
        bezierCurve(g2d, 367.800000, 379.000000, 371.690000, 383.040000, 375.820000, 385.770000, 383.930000, 391.060000,
                3);
        bezierCurve(g2d, 383.930000, 391.060000, 391.580000, 396.060000, 392.400000, 396.090000, 395.490000, 398.850000,
                3);
        bezierCurve(g2d, 395.490000, 398.850000, 399.740000, 402.650000, 402.540000, 406.480000, 404.120000, 408.920000,
                3);
        bezierCurve(g2d, 404.120000, 408.920000, 406.430000, 412.460000, 407.940000, 415.760000, 408.950000, 418.370000,
                3);
        bezierCurve(g2d, 408.950000, 418.370000, 408.280000, 425.240000, 407.370000, 430.740000, 406.660000, 434.500000,
                3);
        bezierCurve(g2d, 406.660000, 434.500000, 405.610000, 440.110000, 404.930000, 442.250000, 404.370000, 447.330000,
                3);
        bezierCurve(g2d, 404.370000, 447.330000, 403.770000, 452.810000, 404.290000, 452.830000, 403.740000, 459.010000,
                3);
        bezierCurve(g2d, 403.740000, 459.010000, 403.080000, 466.360000, 402.290000, 466.930000, 401.840000, 473.490000,
                3);
        bezierCurve(g2d, 401.840000, 473.490000, 401.590000, 477.030000, 401.760000, 477.800000, 401.710000, 484.660000,
                3);
        bezierCurve(g2d, 401.710000, 484.660000, 401.660000, 491.850000, 401.460000, 495.030000, 401.330000, 500.080000,
                3);
        bezierCurve(g2d, 401.330000, 500.080000, 401.060000, 510.790000, 401.620000, 511.180000, 401.710000, 526.440000,
                3);
        bezierCurve(g2d, 401.710000, 526.440000, 401.790000, 539.600000, 401.390000, 542.910000, 401.840000, 552.470000,
                3);
        bezierCurve(g2d, 401.840000, 552.470000, 402.180000, 559.710000, 402.720000, 564.500000, 402.980000, 566.690000,
                3);
        bezierCurve(g2d, 402.980000, 566.690000, 403.690000, 572.540000, 403.930000, 572.010000, 404.120000, 575.070000,
                3);
        bezierCurve(g2d, 404.120000, 575.070000, 404.570000, 582.220000, 404.910000, 587.510000, 402.470000, 592.340000,
                3);
        bezierCurve(g2d, 402.470000, 592.340000, 401.840000, 593.600000, 400.290000, 596.260000, 400.180000, 600.010000,
                3);
        bezierCurve(g2d, 400.180000, 600.010000, 400.150000, 601.010000, 400.230000, 601.830000, 400.310000, 602.380000,
                3);
        bezierCurve(g2d, 390.400000, 421.790000, 390.400000, 427.880000, 389.920000, 433.080000, 389.380000, 437.160000,
                3);
        bezierCurve(g2d, 389.380000, 437.160000, 389.080000, 439.430000, 388.560000, 443.330000, 387.350000, 448.330000,
                3);
        bezierCurve(g2d, 387.350000, 448.330000, 386.090000, 453.560000, 385.450000, 454.340000, 383.790000, 460.140000,
                3);
        bezierCurve(g2d, 383.790000, 460.140000, 382.400000, 465.000000, 382.450000, 465.870000, 380.230000, 475.630000,
                3);
        bezierCurve(g2d, 380.230000, 475.630000, 378.750000, 482.160000, 377.530000, 487.070000, 376.800000, 489.980000,
                3);
        bezierCurve(g2d, 376.800000, 489.980000, 374.430000, 499.480000, 373.250000, 504.230000, 371.470000, 509.790000,
                3);
        bezierCurve(g2d, 371.470000, 509.790000, 368.780000, 518.210000, 368.180000, 518.100000, 367.030000, 523.120000,
                3);
        bezierCurve(g2d, 367.030000, 523.120000, 365.940000, 527.890000, 365.690000, 531.830000, 365.250000, 539.500000,
                3);
        bezierCurve(g2d, 365.250000, 539.500000, 364.840000, 546.610000, 364.800000, 551.850000, 364.740000, 559.060000,
                3);
        bezierCurve(g2d, 364.740000, 559.060000, 364.640000, 570.970000, 364.980000, 570.120000, 364.740000, 577.600000,
                3);
        bezierCurve(g2d, 364.740000, 577.600000, 364.600000, 581.840000, 364.450000, 583.610000, 364.740000, 586.620000,
                3);
        bezierCurve(g2d, 364.740000, 586.620000, 365.300000, 592.370000, 366.940000, 596.950000, 368.300000, 600.000000,
                3);
        bezierCurve(g2d, 368.300000, 600.000000, 368.340000, 600.790000, 368.380000, 601.580000, 368.430000, 602.370000,
                3);
        bezierCurve(g2d, 343.570000, 428.890000, 345.840000, 430.000000, 348.710000, 431.350000, 352.050000, 432.840000,
                3);
        bezierCurve(g2d, 352.050000, 432.840000, 356.280000, 434.710000, 358.440000, 435.670000, 361.160000, 436.520000,
                3);
        bezierCurve(g2d, 361.160000, 436.520000, 363.750000, 437.330000, 366.610000, 438.210000, 370.460000, 438.530000,
                3);
        bezierCurve(g2d, 370.460000, 438.530000, 374.210000, 438.840000, 374.970000, 438.280000, 377.490000, 438.530000,
                3);
        bezierCurve(g2d, 377.490000, 438.530000, 380.200000, 438.800000, 383.970000, 439.900000, 388.340000, 443.730000,
                3);
        bezierCurve(g2d, 340.650000, 438.530000, 341.670000, 439.750000, 343.200000, 441.410000, 345.320000, 443.090000,
                3);
        bezierCurve(g2d, 345.320000, 443.090000, 347.350000, 444.710000, 348.390000, 445.540000, 350.020000, 446.050000,
                3);
        bezierCurve(g2d, 350.020000, 446.050000, 352.690000, 446.890000, 353.530000, 445.810000, 357.260000, 446.170000,
                3);
        bezierCurve(g2d, 357.260000, 446.170000, 360.490000, 446.480000, 360.240000, 447.330000, 363.740000, 447.820000,
                3);
        bezierCurve(g2d, 363.740000, 447.820000, 367.370000, 448.330000, 367.770000, 447.430000, 371.870000, 447.820000,
                3);
        bezierCurve(g2d, 371.870000, 447.820000, 372.750000, 447.900000, 375.560000, 448.210000, 378.980000, 449.450000,
                3);
        bezierCurve(g2d, 378.980000, 449.450000, 381.990000, 450.540000, 384.350000, 451.950000, 386.020000, 453.130000,
                3);
        bezierCurve(g2d, 353.700000, 465.480000, 354.650000, 463.740000, 355.600000, 461.780000, 356.490000, 459.590000,
                3);
        bezierCurve(g2d, 356.490000, 459.590000, 357.800000, 456.380000, 358.680000, 453.380000, 359.280000, 450.750000,
                3);
        bresenhamLine(g2d, 359.280000, 450.750000, 364.570000, 451.770000);
        bresenhamLine(g2d, 364.570000, 451.770000, 367.910000, 457.360000);
        bresenhamLine(g2d, 367.910000, 457.360000, 369.810000, 452.510000);
        bresenhamLine(g2d, 369.810000, 452.510000, 374.250000, 453.930000);
        bezierCurve(g2d, 374.250000, 453.930000, 374.010000, 454.890000, 373.580000, 456.370000, 372.850000, 458.120000,
                3);
        bezierCurve(g2d, 372.850000, 458.120000, 371.770000, 460.720000, 370.980000, 461.610000, 370.310000, 463.690000,
                3);
        bezierCurve(g2d, 370.310000, 463.690000, 369.950000, 464.790000, 369.550000, 466.460000, 369.550000, 468.660000,
                3);
        bresenhamLine(g2d, 369.550000, 468.660000, 365.110000, 467.640000);
        bresenhamLine(g2d, 365.110000, 467.640000, 362.320000, 460.530000);
        bresenhamLine(g2d, 362.320000, 460.530000, 360.540000, 466.140000);
        bresenhamLine(g2d, 360.540000, 466.140000, 353.680000, 465.490000);
        bezierCurve(g2d, 351.030000, 446.300000, 350.370000, 448.260000, 349.340000, 451.280000, 347.980000, 454.950000,
                3);
        bezierCurve(g2d, 347.980000, 454.950000, 345.410000, 461.930000, 344.390000, 463.990000, 342.900000, 468.640000,
                3);
        bezierCurve(g2d, 342.900000, 468.640000, 341.500000, 473.040000, 340.740000, 476.410000, 340.110000, 479.310000,
                3);
        bezierCurve(g2d, 340.110000, 479.310000, 339.590000, 481.690000, 338.270000, 487.950000, 337.440000, 496.330000,
                3);
        bezierCurve(g2d, 337.440000, 496.330000, 336.820000, 502.550000, 336.730000, 507.350000, 336.680000, 510.170000,
                3);
        bezierCurve(g2d, 336.680000, 510.170000, 336.500000, 520.170000, 337.290000, 520.930000, 336.680000, 527.310000,
                3);
        bezierCurve(g2d, 336.680000, 527.310000, 336.090000, 533.540000, 335.280000, 533.480000, 334.790000, 539.880000,
                3);
        bezierCurve(g2d, 334.790000, 539.880000, 334.470000, 544.090000, 334.670000, 546.000000, 334.790000, 553.210000,
                3);
        bezierCurve(g2d, 334.790000, 553.210000, 334.850000, 556.680000, 334.890000, 561.780000, 334.790000, 568.070000,
                3);
        bezierCurve(g2d, 334.790000, 568.070000, 335.430000, 574.150000, 335.170000, 578.750000, 334.790000, 581.910000,
                3);
        bezierCurve(g2d, 334.790000, 581.910000, 334.600000, 583.450000, 334.230000, 585.980000, 334.790000, 589.280000,
                3);
        bezierCurve(g2d, 334.790000, 589.280000, 335.240000, 591.910000, 336.110000, 593.990000, 336.810000, 595.380000,
                3);
        bezierCurve(g2d, 336.810000, 595.380000, 336.140000, 596.920000, 335.460000, 598.460000, 334.790000, 600.000000,
                3);
        bresenhamLine(g2d, 334.790000, 600.000000, 334.790000, 601.290000);
        bezierCurve(g2d, 270.450000, 251.070000, 270.190000, 252.410000, 269.720000, 254.380000, 268.760000, 256.620000,
                3);
        bezierCurve(g2d, 268.760000, 256.620000, 267.080000, 260.550000, 264.930000, 262.980000, 265.240000, 263.240000,
                3);
        bezierCurve(g2d, 265.240000, 263.240000, 265.540000, 263.500000, 267.560000, 260.890000, 271.190000, 258.790000,
                3);
        bezierCurve(g2d, 271.190000, 258.790000, 273.340000, 257.550000, 275.330000, 256.900000, 276.710000, 256.550000,
                3);
        bezierCurve(g2d, 369.980000, 219.500000, 370.790000, 219.840000, 371.900000, 220.400000, 373.020000, 221.360000,
                3);
        bezierCurve(g2d, 373.020000, 221.360000, 374.610000, 222.720000, 375.470000, 224.240000, 375.900000, 225.170000,
                3);
        bezierCurve(g2d, 179.010000, 600.600000, 194.850000, 600.830000, 210.680000, 601.060000, 226.520000, 601.280000,
                3);
        bezierCurve(g2d, 226.520000, 601.280000, 226.450000, 601.000000, 226.330000, 600.540000, 226.140000, 599.990000,
                3);
        bezierCurve(g2d, 226.140000, 599.990000, 225.110000, 597.030000, 223.690000, 596.030000, 222.810000, 593.940000,
                3);
        bezierCurve(g2d, 222.810000, 593.940000, 222.310000, 592.770000, 222.300000, 591.970000, 222.140000, 589.650000,
                3);
        bezierCurve(g2d, 222.140000, 589.650000, 221.900000, 586.030000, 221.410000, 582.420000, 221.190000, 578.790000,
                3);
        bezierCurve(g2d, 221.190000, 578.790000, 220.880000, 573.900000, 220.680000, 570.600000, 220.240000, 566.500000,
                3);
        bezierCurve(g2d, 220.240000, 566.500000, 219.950000, 563.830000, 219.430000, 559.520000, 218.470000, 554.310000,
                3);
        bezierCurve(g2d, 218.470000, 554.310000, 217.660000, 549.890000, 216.970000, 547.210000, 216.710000, 546.210000,
                3);
        bezierCurve(g2d, 216.710000, 546.210000, 216.190000, 544.230000, 215.710000, 542.660000, 215.000000, 540.400000,
                3);
        bezierCurve(g2d, 215.000000, 540.400000, 212.910000, 533.840000, 211.740000, 530.740000, 210.240000, 526.210000,
                3);
        bezierCurve(g2d, 210.240000, 526.210000, 209.410000, 523.710000, 208.260000, 520.100000, 207.000000, 515.640000,
                3);
        bezierCurve(g2d, 225.950000, 601.280000, 275.910000, 602.130000, 312.350000, 602.200000, 318.370000, 601.880000,
                3);
        bezierCurve(g2d, 318.370000, 601.880000, 322.890000, 601.640000, 327.170000, 601.290000, 327.170000, 601.290000,
                3);
        bezierCurve(g2d, 327.170000, 601.290000, 331.230000, 600.950000, 334.160000, 600.630000, 334.790000, 600.560000,
                3);
        bezierCurve(g2d, 334.790000, 600.560000, 344.460000, 599.530000, 362.790000, 600.890000, 368.370000, 601.220000,
                3);
        bezierCurve(g2d, 368.370000, 601.220000, 375.790000, 601.670000, 386.610000, 601.880000, 400.170000, 600.560000,
                3);

    }

    private void pic2(Graphics2D g2d) {
        // test add and commit
    }

    private void pic3(Graphics2D g2d) {

    }

    private void pic4(Graphics2D g2d) {

    }

    private void pic5(Graphics2D g2d) {

    }

    private void pic6(Graphics2D g2d) {

    }

    private void pic7(Graphics2D g2d) {

    }

    private void pic8(Graphics2D g2d) {

    }

    private void pic9(Graphics2D g2d) {

    }

    private void pic10(Graphics2D g2d) {

    }

    private void pic11(Graphics2D g2d) {

    }

    private void pic12(Graphics2D g2d) {

    }

    private void plot(Graphics g, int x, int y, int size) {
        g.fillRect(x, y, size, size);
    }

    private void bezierCurve(Graphics2D g2, double x1, double y1, double x2, double y2, double x3, double y3, double x4,
            double y4, int size) {
        for (double t = 0; t <= 1; t += 0.001) {
            double xt = Math.pow(1 - t, 3) * x1 +
                    3 * Math.pow(1 - t, 2) * t * x2 +
                    3 * (1 - t) * Math.pow(t, 2) * x3 +
                    Math.pow(t, 3) * x4;

            double yt = Math.pow(1 - t, 3) * y1 +
                    3 * Math.pow(1 - t, 2) * t * y2 +
                    3 * (1 - t) * Math.pow(t, 2) * y3 +
                    Math.pow(t, 3) * y4;

            g2.fillRect((int) Math.round(xt), (int) Math.round(yt), size, size);
        }
    }

    private void bresenhamLine(Graphics2D g, int x1, int y1, int x2, int y2) {

        int dx = Math.abs(x2 - x1);
        int dy = Math.abs(y2 - y1);

        int sx = (x1 < x2) ? 1 : -1;
        int sy = (y1 < y2) ? 1 : -1;
        boolean isSwap = false;

        if (dy > dx) {
            int tmp = dx;
            dy = dx;
            dx = tmp;
            isSwap = true;
        }
        int D = 2 * dy - dx;

        int x = x1;
        int y = y1;

        for (int i = 1; i <= dx; i++) {
            plot(g, x, y, 1);
            if (D >= 0) {
                if (isSwap) {
                    x += sx;
                } else {
                    y += sy;
                }

                D -= 2 * dx;
            }

            if (isSwap) {
                y += sy;
            } else {
                x += sx;
            }

            D += 2 * dy;
        }
    }

    private void bresenhamLine(Graphics2D g, double x1, double y1, double x2, double y2) {
        // Calculate the differences
        double dx = Math.abs(x2 - x1);
        double dy = Math.abs(y2 - y1);

        // Determine the step direction for x and y
        double sx = (x1 < x2) ? 1 : -1;
        double sy = (y1 < y2) ? 1 : -1;

        boolean isSwap = false;

        // Swap the variables if the slope is steeper than 1
        if (dy > dx) {
            double tmp = dx;
            dx = dy;
            dy = tmp;
            isSwap = true;
        }

        // Calculate the initial decision variable
        double D = 2 * dy - dx;

        double x = x1;
        double y = y1;

        // Plot the points along the line
        for (int i = 0; i <= dx; i++) {
            // Convert x, y to integer for plotting
            g.fillRect((int) Math.round(x), (int) Math.round(y), 3, 3);
            // plot(g, Math.round(x), Math.round(y), 1);

            // Update the decision variable
            if (D >= 0) {
                if (isSwap) {
                    x += sx; // Use sx to adjust x for a steep line
                } else {
                    y += sy; // Use sy to adjust y for a shallow line
                }
                D -= 2 * dx;
            }

            // Update x or y based on the slope
            if (isSwap) {
                y += sy;
            } else {
                x += sx;
            }

            D += 2 * dy;
        }
    }

    private BufferedImage floodFill(BufferedImage m, int x, int y, Color targetColor, Color replaceColor) {

        Graphics2D g2 = m.createGraphics(); // สร้างปากกาขึ้นจากรูป
        Queue<Point> q = new LinkedList<>();

        if (m.getRGB(x, y) == targetColor.getRGB()) {
            g2.setColor(replaceColor);
            plot(g2, x, y, 1);
            q.add(new Point(x, y));
        }

        while (!q.isEmpty()) {
            Point p = q.poll();

            // south
            if (p.y < 600 && m.getRGB(p.x, p.y + 1) == targetColor.getRGB()) {
                g2.setColor(replaceColor);
                plot(g2, p.x, p.y + 1, 1);
                q.add(new Point(p.x, p.y + 1));
            }

            // north
            if (p.y > 0 && m.getRGB(p.x, p.y - 1) == targetColor.getRGB()) {
                g2.setColor(replaceColor);
                plot(g2, p.x, p.y - 1, 1);
                q.add(new Point(p.x, p.y - 1));
            }

            // west
            if (p.x > 0 && m.getRGB(p.x - 1, p.y) == targetColor.getRGB()) {
                g2.setColor(replaceColor);
                plot(g2, p.x - 1, p.y, 1);
                q.add(new Point(p.x - 1, p.y));
            }

            // east
            if (p.x < 600 && m.getRGB(p.x + 1, p.y) == targetColor.getRGB()) {
                g2.setColor(replaceColor);
                plot(g2, p.x + 1, p.y, 1);
                q.add(new Point(p.x + 1, p.y));
            }

        }

        return m;
    }

    private void midpointEllipse(Graphics g, int xc, int yc, int a, int b) {
        int x, y, d;
        int a2 = a * a, b2 = b * b;
        int twoA2 = 2 * a2, twoB2 = 2 * b2;

        // REGION 1
        x = 0;
        y = b;
        d = Math.round(b2 - a2 * b + a2 / 4);

        while (b2 * x <= a2 * y) {
            plot(g, x + xc, y + yc, 3);
            plot(g, -x + xc, y + yc, 3);
            plot(g, x + xc, -y + yc, 3);
            plot(g, -x + xc, -y + yc, 3);

            x++;

            if (d >= 0) {
                y--;
                d = d - twoA2 * y;
            }
            d = d + twoB2 * x + b2;
        }

        // REGION 2
        x = a;
        y = 0;
        d = Math.round(a2 - b2 * a + b2 / 4);

        while (b2 * x >= a2 * y) {
            plot(g, x + xc, y + yc, 3);
            plot(g, -x + xc, y + yc, 3);
            plot(g, x + xc, -y + yc, 3);
            plot(g, -x + xc, -y + yc, 3);

            y++;

            if (d >= 0) {
                x--;
                d = d - twoB2 * x;
            }
            d = d + twoA2 * y + a2;
        }
    }

    private void midpointCircle(Graphics g, int xc, int yc, int r) {
        int x = 0;
        int y = r;
        int d = 1 - r;

        while (x <= y) {
            plot(g, x + xc, y + yc, 3);
            plot(g, -x + xc, y + yc, 3);
            plot(g, x + xc, -y + yc, 3);
            plot(g, -x + xc, -y + yc, 3);
            plot(g, y + xc, x + yc, 3);
            plot(g, -y + xc, x + yc, 3);
            plot(g, y + xc, -x + yc, 3);
            plot(g, -y + xc, -x + yc, 3);

            x++;

            if (d >= 0) {
                y--;
                d = d - 2 * y;
            }
            d = d + 2 * x + 1;
        }
    }
}